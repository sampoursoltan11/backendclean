name: Deploy to EC2

on:
  workflow_dispatch:  # Only manual trigger - no automatic deployment on push

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'

    - name: Build Frontend
      run: |
        cd frontend
        npm install
        npm run build

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-southeast-2

    - name: Create Deployment Package
      run: |
        # Create deployment directory
        mkdir -p /tmp/deploy/backend

        # Copy backend files
        cp -r backend/* /tmp/deploy/backend/

        # Copy frontend build
        mkdir -p /tmp/deploy/backend/frontend/build
        cp -r frontend/dist/* /tmp/deploy/backend/frontend/build/

        # Add cache-busting version to main.js import
        echo "Adding cache-busting version parameter..."
        VERSION=$(date +%Y%m%d%H%M%S)
        sed -i "s|/js/main.js\"|/js/main.js?v=$VERSION\"|g" /tmp/deploy/backend/frontend/build/enterprise_tra_home_clean.html
        echo "Cache-busting version added: v=$VERSION"

        # Create tarball
        cd /tmp
        tar -czf tra-app.tar.gz -C deploy .

    - name: Upload to S3
      run: |
        aws s3 cp /tmp/tra-app.tar.gz s3://bhp-tra-agent-docs-poc/deployments/tra-app-latest.tar.gz --region ap-southeast-2

    - name: Deploy to EC2
      env:
        EC2_HOST: 3.25.202.107
        EC2_USER: ec2-user
        SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
      run: |
        # Setup SSH key
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/ec2_key.pem
        chmod 600 ~/.ssh/ec2_key.pem

        # Add EC2 to known hosts
        ssh-keyscan -H $EC2_HOST >> ~/.ssh/known_hosts

        # Deploy on EC2
        ssh -i ~/.ssh/ec2_key.pem $EC2_USER@$EC2_HOST << 'ENDSSH'
        set -e

        # Stop the service
        sudo systemctl stop tra-app

        # Backup old version
        sudo rm -rf /opt/tra-app-backup
        sudo mv /opt/tra-app /opt/tra-app-backup || true

        # Download and extract new version
        sudo mkdir -p /opt/tra-app
        cd /opt/tra-app
        aws s3 cp s3://bhp-tra-agent-docs-poc/deployments/tra-app-latest.tar.gz /tmp/tra-app.tar.gz --region ap-southeast-2
        sudo tar -xzf /tmp/tra-app.tar.gz -C /opt/tra-app/
        rm /tmp/tra-app.tar.gz

        # Skip dependency installation - already installed on EC2
        # Dependencies were manually installed and tested to avoid pip conflicts

        # Create logs directory
        sudo mkdir -p /opt/tra-app/logs

        # Restart the application
        sudo systemctl daemon-reload
        sudo systemctl start tra-app
        sudo systemctl enable tra-app

        echo "Deployment complete!"
        ENDSSH

    - name: Verify Deployment
      run: |
        echo "Waiting for application to start..."
        sleep 20

        # Test health endpoint (use HTTPS)
        HEALTH_CHECK=$(curl -s https://bhp-tra-poc.duckdns.org/api/health)
        echo "Health check response: $HEALTH_CHECK"

        if echo "$HEALTH_CHECK" | grep -q "healthy"; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Health check failed"
          exit 1
        fi

    - name: Notify on Success
      if: success()
      run: |
        echo "🎉 Deployment to EC2 completed successfully!"
        echo "Application URL: https://bhp-tra-poc.duckdns.org"

    - name: Notify on Failure
      if: failure()
      run: |
        echo "❌ Deployment failed. Check the logs above for details."
